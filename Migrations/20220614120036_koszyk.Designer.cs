// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PieShop.Models;

namespace PieShop.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220614120036_koszyk")]
    partial class koszyk
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PieShop.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Serniki"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Torty"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Vegan"
                        });
                });

            modelBuilder.Entity("PieShop.Models.Pie", b =>
                {
                    b.Property<int>("PieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AllergyInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImgThumbUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPieOfTheWeek")
                        .HasColumnType("bit");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PieId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Pies");

                    b.HasData(
                        new
                        {
                            PieId = 1,
                            AllergyInformation = "",
                            CategoryId = 1,
                            ImgThumbUrl = "https://assets.tmecosys.com/image/upload/t_web767x639/img/recipe/ras/Assets/5E8CF016-026E-4859-AAA3-BDC530349537/Derivates/2ECB4E65-17DA-416B-ABD0-4DD330B5B934.jpg",
                            ImgUrl = "https://assets.tmecosys.com/image/upload/t_web767x639/img/recipe/ras/Assets/5E8CF016-026E-4859-AAA3-BDC530349537/Derivates/2ECB4E65-17DA-416B-ABD0-4DD330B5B934.jpg",
                            InStock = true,
                            IsPieOfTheWeek = true,
                            LongDescription = "Najelpszy Nowojorski sernik!",
                            Name = "New York Cheesecake",
                            Price = 12.95m,
                            ShortDescription = "Najelpszy Nowojorski sernik!"
                        },
                        new
                        {
                            PieId = 2,
                            AllergyInformation = "",
                            CategoryId = 1,
                            ImgThumbUrl = "https://d3iamf8ydd24h9.cloudfront.net/pictures/articles/2018/11/659622-v-1080x1080.jpg",
                            ImgUrl = "https://d3iamf8ydd24h9.cloudfront.net/pictures/articles/2018/11/659622-v-1080x1080.jpg",
                            InStock = true,
                            IsPieOfTheWeek = false,
                            LongDescription = "Kruche ciasto z dodatkiem kakao i idealna masa serowa!",
                            Name = "Sernik krolewski",
                            Price = 8.99m,
                            ShortDescription = "Kruche ciasto z dodatkiem kakao i idealna masa serowa!"
                        },
                        new
                        {
                            PieId = 3,
                            AllergyInformation = "",
                            CategoryId = 2,
                            ImgThumbUrl = "https://pk1.pocztakwiatowa.pl/media/catalog/product/xc/image/t/o/tort_orzechowy.jpg",
                            ImgUrl = "https://pk1.pocztakwiatowa.pl/media/catalog/product/xc/image/t/o/tort_orzechowy.jpg",
                            InStock = true,
                            IsPieOfTheWeek = false,
                            LongDescription = "Delikatny orzechowy krem...",
                            Name = "Tort orzechowy",
                            Price = 11.95m,
                            ShortDescription = "Delikatny orzechowy krem..."
                        },
                        new
                        {
                            PieId = 4,
                            AllergyInformation = "",
                            CategoryId = 3,
                            ImgThumbUrl = "https://wszystkiegoslodkiego.pl/storage/images/202110/tofumisu-1.webp",
                            ImgUrl = "https://wszystkiegoslodkiego.pl/storage/images/202110/tofumisu-1.webp",
                            InStock = true,
                            IsPieOfTheWeek = false,
                            LongDescription = "Tofumisu - tiramisu w wersji Vegan!",
                            Name = "Tofumisu",
                            Price = 25m,
                            ShortDescription = "Tofumisu - tiramisu w wersji Vegan!"
                        });
                });

            modelBuilder.Entity("PieShop.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("ShoppingCartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("PieId")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShoppingCartItemId");

                    b.HasIndex("PieId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("PieShop.Models.Pie", b =>
                {
                    b.HasOne("PieShop.Models.Category", "Category")
                        .WithMany("Pies")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PieShop.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("PieShop.Models.Pie", "Pie")
                        .WithMany()
                        .HasForeignKey("PieId");

                    b.Navigation("Pie");
                });

            modelBuilder.Entity("PieShop.Models.Category", b =>
                {
                    b.Navigation("Pies");
                });
#pragma warning restore 612, 618
        }
    }
}
